---
title: "Titanic_Case"
author: "Olivia Huang"
date: "8/29/2018"
output: html_document
---
#Command shift C --> Comment everything
#Command option I --> Create code block 

Data Exploration 

```{r}
library(dplyr)
library(tidyr)
library(ggplot2)


setwd("~/Desktop/Titanic - practice")
titanic_test = read.csv("test.csv")
titanic_train = read.csv("train.csv")

# Delete the Survived column from titanic_train, so that can create original data set with same number of fields
titanic_train$Survived = NULL 

# Bind data sets together to create original data set 
titanic = rbind(titanic_train, titanic_test)

summary(titanic)
glimpse(titanic)

# Retrieve number of unique values in different fields 
length(unique(titanic$Age))
length(unique(titanic$Parch))
length(unique(titanic$Cabin))
length(unique(titanic$Embarked))

# Time for data cleaning 

# First, fill in missing values for Age field. # Will do this using average Age values for that particular Pclass and Sex 

titanic_1 = titanic %>% 
  group_by(Pclass, Sex) %>% 
  mutate(Age = replace(Age, is.na(Age), mean(Age, na.rm = T))) 
# Set na.rm = T in order to calculate the mean of non missing values, so each missing value counts as a value 

# Second, fill in the 2 missing values for Embarked field. # Fill in based on most common Embarked value for that Pclass 
# Both missing values have a Pclass of 1, so filter using this 
titanic_1 %>% 
  filter(Pclass == 1) %>% 
  group_by(Embarked) %>% 
  summarise(count = n())
# We see that Embarked value S has the highest count of 177 
# Fill in missing values with S 
titanic_1 = titanic_1 %>%
  mutate(Embarked = replace(Embarked,Embarked=="", "S"))

#Check that missing values are gone!
titanic_1 %>% 
  group_by(Embarked) %>% 
  summarise(count = n())
sum(titanic$Embarked == "")
sum(titanic_1$Embarked =="") # Now, 0 missing values in Embarked 

# Now, work on filling Cabin field 
sum(is.na(titanic_1$Cabin))
# No NA values in Cabin, missing values are all ""

a = titanic_1 %>% 
  group_by(Cabin, Embarked) %>% 
  summarise(count=n())

b = titanic_1 %>% 
  group_by(Cabin, Pclass) %>% 
  summarise(count=n())

# Most of the missing cabin values are in Pclass of 3 and Embarked = S (Embarked fron Southampton)

c = titanic_1 %>% 
  group_by(Pclass, Embarked, Cabin) %>% 
  summarise(count=n())


c = titanic_1 %>% 
  group_by(Pclass, Embarked, Cabin) %>% 
  filter()

sdd = titanic_1 %>% 
  filter(Pclass == 3, Embarked == "S")

# Decide to fill in missing value for Cabin based on the Pclass and Embarked AND SEX 
# Based on most common cabin for that Pclass and Embarked 
c %>% filter(Pclass == 3, Embarked == "S") %>% arrange(-count) #Most common for Pclass =3 and Embarked = S is Cabin G6 , but this only occurs 5 times
# Replace Pclass =3 and Embarked = S with dummy value AAA 


c %>% filter(Pclass == 2, Embarked == "S") %>% arrange(-count) 
# Replace Pclass == 2, Embarked == "S" with dummy value BBB 

c %>% filter(Pclass == 3, Embarked == "Q") %>% arrange(-count) # Most common is F38 (only one)
# Replace Pclass == 3, Embarked == "Q" with dummy value CCC 


c %>% filter(Pclass == 3, Embarked == "C") %>% arrange(-count) 
# Replace Pclass == 3, Embarked == "Q" with dummy value DDD 

c %>% filter(Pclass == 1, Embarked == "S") %>% arrange(-count) # Most common is C23 C25 C27 
# Replace Pclass == 1, Embarked == "S" with dummy value EEE 

c %>% filter(Pclass == 1, Embarked == "C") %>% arrange(-count) # Most common is B57 B59 B63 B66
# Replace Pclass == 1, Embarked == "C" with dummy value FFF

c %>% filter(Pclass == 2, Embarked == "C") %>% arrange(-count) # Most common is D 
# Replace Pclass == 2, Embarked == "C" with dummy value GGG 

c %>% filter(Pclass == 2, Embarked == "Q") %>% arrange(-count) # Most common is E101 (only one)
# Replace Pclass == 2, Embarked == "Q" with dummy value HHH 



str(titanic_2)

titanic_3 = titanic_2[,-11]


titanic_3 = titanic_2 %>% 
  mutate(Cabin = replace(Cabin, Pclass == 3 & Embarked == "S", "AAA")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 2 & Embarked == "S", "BBB")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 3 & Embarked == "Q", "CCC")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 3 & Embarked == "C", "DDD")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 1 & Embarked == "S", "EEE")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 1 & Embarked == "C", "FFF")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 2 & Embarked == "C", "GGG")) %>% 
  mutate(Cabin = replace(Cabin, Pclass == 2 & Embarked == "Q", "HHH")) 

## Cabin is only 22% populated... delete this column 

    
write.csv(titanic_2, 'titanic_2.csv')


titanic_1 %>% 
  group_by(Cabin, Pclass, Embarked, Sex) %>% 
  filter(Pclass == 2, Embarked == "S") %>% 
  summarise(count=n()) %>% 
  arrange(-count)

# Most common cabin for Pclass 2, Embarked S , Male : Cabin F2 
# Most common cabin for Pclass 2, Embarked S , Female: Cabin F33 

titanic_1 %>% 
  group_by(Cabin, Pclass, Embarked, Sex) %>% 
  filter(Pclass == 3, Embarked == "S") %>% 
  summarise(count=n()) %>% 
  arrange(-count)

# Most common cabin for Pclass 3, Embarked S , Male : Cabin F G63
# Most common cabin for Pclass 3, Embarked S , Female: Cabin G6

titanic_1 %>% 
  group_by(Cabin, Pclass, Embarked, Sex) %>% 
  filter(Pclass == 3, Embarked == "C") %>% 
  summarise(count=n()) %>% 
  arrange(-count)

# Most common cabin for Pclass 3, Embarked C , Male : Cabin F E46
# Most common cabin for Pclass 3, Embarked C , Female: Cabin F E69

titanic_1 %>% 
  group_by(Cabin, Pclass, Embarked, Sex) %>% 
  filter(Pclass == 1, Embarked == "S") %>% 
  summarise(count=n()) %>% 
  arrange(-count)

# Most common cabin for Pclass 1, Embarked S, Male : Cabin A34
# Most common cabin for Pclass 1, Embarked S, Female: Cabin C23 C25 C27


titanic_1 %>% 
  group_by(Cabin, Pclass, Embarked, Sex) %>% 
  filter(Pclass == 3, Embarked == "Q") %>% 
  summarise(count=n()) %>% 
  arrange(-count)

# Most common cabin for Pclass 3, Embarked Q, Male : Cabin F38
# Most common cabin for Pclass 3, Embarked Q, Female: n/a...

titanic_1 %>% 
  group_by(Cabin, Pclass, Embarked, Sex) %>% 
  filter(Pclass == 2, Embarked == "C") %>% 
  summarise(count=n()) %>% 
  arrange(-count)

# Most common cabin for Pclass 2, Embarked C : Cabin D --- cabins are gender neutral 



# Separate first and last name by comma  
# If ticket number and last name same -- put in same cabin 

titanic_2 = separate(titanic_1, Name, c("Last Name", "First Name"), sep = ", ")

aa = titanic_2 %>% 
  filter(Cabin == "") %>% 
  group_by(`Last Name`, Ticket) %>% 
  summarise(count=n()) %>% 
  select(count>1) 


aaa = titanic_2 %>% 
  group_by(`Last Name`, Ticket) %>% 
  summarise(count=n())

bb = titanic_2 %>% filter(Ticket == "CA. 2343")

cc = titanic_2 %>% filter(Ticket == "CA 2144")

# Assume based on observation that Family stay in same cabin 




ggplot(c, aes(x=reorder(Pclass,count), y=count))+
  geom_bar(stat="identity")

dd = titanic_2 %>% 
  filter(Cabin == "")



```


Data Understanding 
```{r}

q = titanic %>% 
  group_by(Sex) %>% 
  summarise(count=n())

# Plot number of passengers by sex, female or male
ggplot(q, aes(x=reorder(Sex,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Sex")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Number of Passengers by Sex")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=0)


w = titanic %>% 
  group_by(Embarked) %>% 
  summarise(count=n())

# Plot number passengers for each port of embarkation 
ggplot(w, aes(x=reorder(Embarked,-count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Port of Embarkation")+
  ylab("Number of Passengers")+
  theme_minimal()+
  ggtitle("Number of Passengers by Port of Embarkation")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=0.4, vjust=-0.6)

e = titanic %>% 
  group_by(Age) %>% 
    summarise(count=n()) %>% 
  arrange(-count) %>% 
  head(10)

ggplot(e, aes(x=reorder(Age,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Age")+
  ylab("Number of Passengers")+
  theme_minimal()+
  ggtitle("Top 10 Ages with Greatest Number of Passengers")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1, vjust=0.3)+
  coord_flip()


f = titanic %>% 
  group_by(SibSp) %>% 
    summarise(count=n())

ggplot(f, aes(x=reorder(SibSp,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Number of Siblings/Spouses Aboard the Titanic")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Total Number of Passengers with Given Number of Siblings/Spouses on Titanic")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1)


g= titanic %>% 
  group_by(Parch) %>% 
    summarise(count=n())

ggplot(g, aes(x=reorder(Parch,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Number of Parents/Children Aboard the Titanic")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Total Number of Passengers with Given Number of Parents/Children on Titanic")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1)


t= titanic %>% 
  group_by(Fare) %>% 
    summarise(count=n()) %>% 
  arrange(-count) %>% 
  head(10)

ggplot(t, aes(x=reorder(Fare,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Passenger Fare")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Total Number of Passengers with Given Passenger Fare")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1)


u= titanic %>% 
  group_by(Cabin) %>% 
    summarise(count=n()) %>% 
  arrange(-count) %>% 
  head(5)

ggplot(u, aes(x=reorder(Cabin,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Cabin")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Total Number of Passengers in Top 5 Cabins")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1)


i= titanic %>% 
  group_by(Pclass) %>% 
    summarise(count=n()) %>% 


ggplot(i, aes(x=reorder(Pclass,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Ticket Class")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Total Number of Passengers per Ticket Class")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1)


p= titanic %>% 
  group_by(Ticket) %>% 
    summarise(count=n()) %>% 
  arrange(-count) %>% 
  head(5)

ggplot(p, aes(x=reorder(Ticket,count), y=count))+
  geom_bar(stat="identity",fill="darkblue", width=0.4)+ 
  xlab("Ticket Number")+
  ylab("Number of Passengers")+
  coord_flip() + 
  theme_minimal()+
  ggtitle("Total Number of Passengers per Top 5 Ticket Numbers")+
  theme(plot.title = element_text(size=14, hjust=0))+
  geom_text(aes(label=count), hjust=-0.1)



j= titanic_2 %>% 
  group_by(`Last Name`) %>% 
    summarise(count=n()) %>% 
  arrange(-count)
```


Feature Engineering 
```{r}
# Creating Expert Variables 
# Last name and age variable 

# Where did the survive field go? export as csv and place back in..? 









```


Hyperparameters Tuning 
```{r}

```


Data Modeling 
```{r}

```

